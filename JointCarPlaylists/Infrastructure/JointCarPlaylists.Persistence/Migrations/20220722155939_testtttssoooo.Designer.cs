// <auto-generated />
using System;
using JointCarPlaylists.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JointCarPlaylists.Persistence.Migrations
{
    [DbContext(typeof(JointCarPlaylistsDbContext))]
    [Migration("20220722155939_testtttssoooo")]
    partial class testtttssoooo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JointCarPlaylists.Domain.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AlbumId");

                    b.Property<string>("AlbumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalTracks")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            AlbumType = "Hip-Hop",
                            ArtistId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            ExternalUrl = "asdsadasd.com",
                            Name = "IT_Solutions Ltd",
                            ReleaseDate = "1999",
                            TotalTracks = 0,
                            Type = "Underground"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            AlbumType = "Hip-Hop",
                            ArtistId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            ExternalUrl = "asds444adasd.com",
                            Name = "Admin_Solutions Ltd",
                            ReleaseDate = "2005",
                            TotalTracks = 4,
                            Type = "Underground"
                        });
                });

            modelBuilder.Entity("JointCarPlaylists.Domain.Entities.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ArtistId");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Followers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Popularity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            ExternalUrl = "ted.com",
                            Followers = 1232312,
                            Name = "Kendrick",
                            Popularity = 9,
                            Type = "Hip-Hop",
                            URI = "dsasdasdasd.com"
                        });
                });

            modelBuilder.Entity("JointCarPlaylists.Domain.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TrackId");

                    b.Property<int?>("DurationMS")
                        .HasColumnType("int");

                    b.Property<bool?>("Explicit")
                        .HasColumnType("bit");

                    b.Property<string>("ExternalURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Popularity")
                        .HasColumnType("int");

                    b.Property<int?>("TrackNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            DurationMS = 5000,
                            Explicit = true,
                            ExternalURL = "sedasdas.com",
                            Name = "Sam Raiden",
                            Popularity = 34,
                            TrackNumber = 2,
                            Type = "Underground",
                            URI = "losakdfdf.com"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            DurationMS = 4000,
                            Explicit = true,
                            ExternalURL = "sewresdas.com",
                            Name = "Jana McLeaf",
                            Popularity = 64,
                            TrackNumber = 3,
                            Type = "Underground",
                            URI = "lossdsdfdfdf.com"
                        },
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            DurationMS = 500,
                            Explicit = false,
                            ExternalURL = "sedasds.com",
                            Name = "Kane Miller",
                            Popularity = 74,
                            TrackNumber = 4,
                            Type = "Underground",
                            URI = "losdfdf.com"
                        });
                });

            modelBuilder.Entity("JointCarPlaylists.Domain.Entities.Album", b =>
                {
                    b.HasOne("JointCarPlaylists.Domain.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("JointCarPlaylists.Domain.Entities.Artist", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
